lines(underlying_func, 1:N_subperiods, xlim= c(0,N_subperiods), col.points=FALSE, verticals=TRUE)
N_sub =50
N_period =7
N_subperiods =N_sub*N_period
time = 1:(N_subperiods)
shocks = rnorm(N_subperiods,0,1)
mean_shocks = mean(shocks)
underlying = cumsum(shocks)-mean_shocks
time_agg = underlying*0.0
for (T in 1:N_period){
t = (T-1)*N_sub+1
time_agg[t:(t+N_sub-1)]=mean(underlying[t:(t+N_sub-1)])
}
plot(time, underlying, type="l")
plot(time, time_agg)
time_agg_func=stepfun(time[1:(N_subperiods-1)], time_agg)
underlying_func=stepfun(time[1:(N_subperiods-1)], underlying)
plot(time_agg_func, 1:N_subperiods, xlim= c(0,N_subperiods),col="red", col.points=FALSE, verticals=TRUE,lwd=4)
lines(underlying_func, 1:N_subperiods, xlim= c(0,N_subperiods), col.points=FALSE, verticals=TRUE)
N_sub =50
N_period =7
N_subperiods =N_sub*N_period
time = 1:(N_subperiods)
shocks = rnorm(N_subperiods,0,1)
underlying = cumsum(shocks)-mean(cumsum(shocks)))
time_agg = underlying*0.0
for (T in 1:N_period){
t = (T-1)*N_sub+1
time_agg[t:(t+N_sub-1)]=mean(underlying[t:(t+N_sub-1)])
}
plot(time, underlying, type="l")
plot(time, time_agg)
time_agg_func=stepfun(time[1:(N_subperiods-1)], time_agg)
underlying_func=stepfun(time[1:(N_subperiods-1)], underlying)
plot(time_agg_func, 1:N_subperiods, xlim= c(0,N_subperiods),col="red", col.points=FALSE, verticals=TRUE,lwd=4)
lines(underlying_func, 1:N_subperiods, xlim= c(0,N_subperiods), col.points=FALSE, verticals=TRUE)
N_sub =50
N_period =7
N_subperiods =N_sub*N_period
time = 1:(N_subperiods)
shocks = rnorm(N_subperiods,0,1)
underlying = cumsum(shocks)-mean(cumsum(shocks))
time_agg = underlying*0.0
for (T in 1:N_period){
t = (T-1)*N_sub+1
time_agg[t:(t+N_sub-1)]=mean(underlying[t:(t+N_sub-1)])
}
plot(time, underlying, type="l")
plot(time, time_agg)
time_agg_func=stepfun(time[1:(N_subperiods-1)], time_agg)
underlying_func=stepfun(time[1:(N_subperiods-1)], underlying)
plot(time_agg_func, 1:N_subperiods, xlim= c(0,N_subperiods),col="red", col.points=FALSE, verticals=TRUE,lwd=4)
lines(underlying_func, 1:N_subperiods, xlim= c(0,N_subperiods), col.points=FALSE, verticals=TRUE)
N_sub =50
N_period =7
N_subperiods =N_sub*N_period
time = 1:(N_subperiods)
shocks = rnorm(N_subperiods,0,1)
underlying = cumsum(shocks)-mean(cumsum(shocks))
time_agg = underlying*0.0
for (T in 1:N_period){
t = (T-1)*N_sub+1
time_agg[t:(t+N_sub-1)]=mean(underlying[t:(t+N_sub-1)])
}
plot(time, underlying, type="l")
plot(time, time_agg)
time_agg_func=stepfun(time[1:(N_subperiods-1)], time_agg)
underlying_func=stepfun(time[1:(N_subperiods-1)], underlying)
plot(time_agg_func, 1:N_subperiods, xlim= c(0,N_subperiods),col="red", col.points=FALSE, verticals=TRUE,lwd=4)
lines(underlying_func, 1:N_subperiods, xlim= c(0,N_subperiods), col.points=FALSE, verticals=TRUE)
N_sub =50
N_period =7
N_subperiods =N_sub*N_period
time = (1:(N_subperiods))/N_sub
shocks = rnorm(N_subperiods,0,1)
underlying = cumsum(shocks)-mean(cumsum(shocks))
time_agg = underlying*0.0
for (T in 1:N_period){
t = (T-1)*N_sub+1
time_agg[t:(t+N_sub-1)]=mean(underlying[t:(t+N_sub-1)])
}
plot(time, underlying, type="l")
plot(time, time_agg)
time_agg_func=stepfun(time[1:(N_subperiods-1)], time_agg)
underlying_func=stepfun(time[1:(N_subperiods-1)], underlying)
plot(time_agg_func, 1:N_subperiods, xlim= c(0,N_subperiods),col="red", col.points=FALSE, verticals=TRUE,lwd=4)
lines(underlying_func, 1:N_subperiods, xlim= c(0,N_subperiods), col.points=FALSE, verticals=TRUE)
plot(time_agg_func, time, xlim= c(0,N_subperiods),col="red", col.points=FALSE, verticals=TRUE,lwd=4)
plot(time_agg_func, time, xlim= c(0,N_subperiods),col="red", col.points=FALSE, verticals=TRUE,lwd=4)
lines(underlying_func, time, xlim= c(0,N_subperiods), col.points=FALSE, verticals=TRUE)
plot(time_agg_func, time, xlim= c(0,N_period),col="red", col.points=FALSE, verticals=TRUE,lwd=4)
lines(underlying_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE)
N_sub =50
N_period =7
N_subperiods =N_sub*N_period
time = (1:(N_subperiods))/N_sub
#shocks = rnorm(N_subperiods,0,1)
underlying = cumsum(shocks)-mean(cumsum(shocks))
time_agg = underlying*0.0
for (T in 1:N_period){
t = (T-1)*N_sub+1
time_agg[t:(t+N_sub-1)]=mean(underlying[t:(t+N_sub-1)])
}
plot(time, underlying, type="l")
plot(time, time_agg)
time_agg_func=stepfun(time[1:(N_subperiods-1)], time_agg)
underlying_func=stepfun(time[1:(N_subperiods-1)], underlying)
plot(time_agg_func, time, xlim= c(0,N_period),col="red", col.points=FALSE, verticals=TRUE,lwd=4)
lines(underlying_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE)
plot(time_agg_func, time, xlim= c(0,N_period),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income")
lines(underlying_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE)
plot(time_agg_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE,xlab="Time",ylab="Income")
#lines(underlying_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE)
lines(time_agg_func, time, xlim= c(0,N_period),,col="red", col.points=FALSE, verticals=TRUE,lwd=4)
plot(underlying, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE,xlab="Time",ylab="Income")
#lines(underlying_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE)
lines(time_agg_func, time, xlim= c(0,N_period),,col="red", col.points=FALSE, verticals=TRUE,lwd=4)
plot(underlying, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE,xlab="Time",ylab="Income")
#lines(underlying_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE)
lines(time_agg_func, time, xlim= c(0,N_period),col="red", col.points=FALSE, verticals=TRUE,lwd=4)
plot(time_agg_func, time, xlim= c(0,N_period),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income")
lines(underlying_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE)
plot(time_agg_func, time, xlim= c(0,N_period),ylim=c(min(underlying),max(underlying)),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income")
lines(underlying_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE)
plot(time_agg_func, time, xlim= c(0,N_period),ylim=c(min(underlying),max(underlying)),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",title="Time Aggregated Random Walk")
lines(underlying_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE)
plot(time_agg_func, time, xlim= c(0,N_period),ylim=c(min(underlying),max(underlying)),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="Time Aggregated Random Walk")
lines(underlying_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE)
plot(time_agg_func, time, xlim= c(0,N_period),ylim=c(min(underlying),max(underlying)),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="Time Aggregated Random Walk")
lines(underlying_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE)
dev.print(png, 'timeagg_rw.png')
plot(time_agg_func, time, xlim= c(0,N_period),ylim=c(min(underlying),max(underlying)),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="Time Aggregated Random Walk")
lines(underlying_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE)
dev.print(pdf, 'timeagg_rw.pdf')
plot(time_agg_func, time, xlim= c(0,N_period),ylim=c(min(underlying),max(underlying)),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="Time Aggregated Random Walk")
lines(underlying_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE)
dev.print(pdf, 'C:\Users\edmun\OneDrive\Documents\Research\Denmark\BPP\PresentationFeb27\timeagg_rw.pdf')
plot(time_agg_func, time, xlim= c(0,N_period),ylim=c(min(underlying),max(underlying)),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="Time Aggregated Random Walk")
lines(underlying_func, time, xlim= c(0,N_period), col.points=FALSE, verticals=TRUE)
dev.print(pdf, 'C:/Users/edmun/OneDrive/Documents/Research/Denmark/BPP/PresentationFeb27/timeagg_rw.pdf')
impulse_response=stepfun(1:5, c(1,theta1,theta2,0,0))
theta1 = 0.35
theta2 = 0.1
impulse_response=stepfun(1:5, c(1,theta1,theta2,0,0))
theta1 = 0.35
theta2 = 0.1
impulse_response=stepfun(1:5, c(1,1,theta1,theta2,0,0))
impulse_response=stepfun(1:5, c(1,1,theta1,theta2,0,0))
plot(impulse_response, 1:5, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
impulse_response=stepfun(1:5, c(1,theta1,theta2,0,0,0))
plot(impulse_response, 1:5, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
impulse_response=stepfun(0:5, c(0,1,theta1,theta2,0,0,0))
plot(impulse_response, 1:5, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
impulse_response=stepfun(1:5, c(0,1,theta1,theta2,0,0,0))
plot(impulse_response, 1:5, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
impulse_response=stepfun(1:5, c(0,1,theta1,theta2,0,0,0,0))
plot(impulse_response, 1:5, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
impulse_response=stepfun(1:5, c(0,1,theta1,theta2,0,0))
plot(impulse_response, 1:5, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
impulse_response=stepfun(0:5, c(0,1,theta1,theta2,0,0,0))
plot(impulse_response, 1:5, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
impulse_response=stepfun(1:5, c(0,1,theta1,theta2,0,0))
plot(impulse_response, 1:5, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
impulse_response=stepfun(0:4, c(0,1,theta1,theta2,0,0))
plot(impulse_response, 1:5, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
impulse_response=stepfun(1:5, c(0,1,theta1,theta2,0,0))
plot(impulse_response, 1:5, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
impulse_response=stepfun(0:4, c(0,1,theta1,theta2,0,0))
plot(impulse_response, 0:4, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
impulse_response=stepfun(0:4, c(0,1,theta1,theta2,0,0))
plot(impulse_response, 0:4, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
dev.print(pdf, 'C:/Users/edmun/OneDrive/Documents/Research/Denmark/BPP/PresentationFeb27/MA2.pdf')
x = (0:1000)/1000*5
y = (x/2.0-1)^2
plot(y, x, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
x = (0:1000)/1000*5
y = -(x/2.0-0.5)^2+1
plot(y, x, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
x = (0:1000)/1000*5
y = -(x/2.0)^2+1
plot(y, x, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
x = (0:1000)/1000*5
y = -(x/2.0)^2+1
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
x = (0:1000)/1000*5
y = -(x/2.5)^2+1
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
x = (0:1000)/1000*5
y = -(x/1.5)^2+1
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
x = (0:1000)/1000*5
y = max(-(x/1.5)^2+1,0)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(x-2)^2
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
x = (0:1000)/1000*5
y = max(0.25*(x-2)^2, x*0.0)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
x = (0:1000)/1000*5
y = pmax(0.25*(x-2)^2, x*0.0)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
x = (0:1000)/1000*5
y = pmax(0.25*(x-2)^2, x*0.0)
warnings()
y = pmax(0.25*(x-2)^2, x*0.0)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
y
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
dev.print(pdf, 'C:/Users/edmun/OneDrive/Documents/Research/Denmark/BPP/PresentationFeb27/GenericTransitory.pdf')
impulse_response_MA2=stepfun(0:4, c(0,1,theta1,theta2,0,0))
plot(impulse_response_MA2, 0:4, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="MA(2) Impulse Response")
dev.print(pdf, 'C:/Users/edmun/OneDrive/Documents/Research/Denmark/BPP/PresentationFeb27/MA2.png')
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
dev.print(pdf, 'C:/Users/edmun/OneDrive/Documents/Research/Denmark/BPP/PresentationFeb27/GenericTransitory.png')
x=c((-20:0)/(20*5),x)
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20*5),x)
x=c((-20:0)*0.0,y)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x=c((-20:0)*0.0,y)
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
x=c((-20:0)*0.0,y)
(-20:0)/(20.0*5)
c(x,x)
x = (0:1000)/1000*5
x=c((-20:0)/(20.0*5),x)
y = 0.25*(pmin(x-2,0))^2
y = 0.25*(pmin(x-2,0))^2
y = 0.25*(pmin(x-2,0))^2
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=TRUE,lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
dev.print(pdf, 'C:/Users/edmun/OneDrive/Documents/Research/Denmark/BPP/PresentationFeb27/GenericTransitory.png')
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE, verticals=True,lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE,lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",lty="l", col.points=FALSE,lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",lty="l", col.points=FALSE,lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",lty='l', col.points=FALSE,lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",lty=2, col.points=FALSE,lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
lines(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",lty=2, col.points=FALSE,lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
lines(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE,lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
lines(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red", col.points=FALSE,lwd=2,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
lines(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",lwd=2,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
lines(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
lines(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="n",xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
lines(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="n",xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="n",xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response")
dev.print(pdf, 'C:/Users/edmun/OneDrive/Documents/Research/Denmark/BPP/PresentationFeb27/GenericTransitory.png')
x = (0:1000)/1000*5
y = 0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response, f(t)")
dev.print(pdf, 'C:/Users/edmun/OneDrive/Documents/Research/Denmark/BPP/PresentationFeb27/GenericTransitory.png')
x = (0:1000)/1000*5
y = (pmin(x-1,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response, f(t)")
c = 0.5*0.25*(pmin(x-2,0))^2
lines(x,c, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response, f(t)")
x = (0:1000)/1000*5
y = (pmin(x-1,0))^2
c = 0.5*0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
c=c((-20:0)*0.0,c)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response, f(t)")
lines(x,c, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response, f(t)")
x = (0:1000)/1000*5
y = (pmin(x-1,0))^2
c = 0.5*0.25*(pmin(x-2,0))^2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
c=c((-20:0)*0.0,c)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response, f(t)")
lines(x,c, xlim= c(0,5),ylim=c(0,1.2),col="black",type="l",lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response, f(t)")
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response, f(t)")
lines(x,c, xlim= c(0,5),ylim=c(0,1.2),col="black",type="l",lwd=4,xlab="Time",ylab="Income\Consumption",main="Generic Transitory Impulse Response, f(t)")
lines(x,c, xlim= c(0,5),ylim=c(0,1.2),col="black",type="l",lwd=4,xlab="Time",ylab="Income\\Consumption",main="Generic Transitory Impulse Response, f(t)")
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income\\Consumption",main="Generic Transitory Impulse Response, f(t)")
lines(x,c, xlim= c(0,5),ylim=c(0,1.2),col="black",type="l",lwd=4,xlab="Time",ylab="Income\\Consumption",main="Generic Transitory Impulse Response, f(t)")
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Response, f(t)")
lines(x,c, xlim= c(0,5),ylim=c(0,1.2),col="black",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Response, f(t)")
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Responses, f(t) and g(t)")
lines(x,c, xlim= c(0,5),ylim=c(0,1.2),col="black",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Response, f(t)")
x = (0:1000)/1000*5
y = (pmin(x-1,0))^2
c = 0.5*0.25*(pmin(x-2,0))^2
cBPP = c*0.0 + 0.3
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
c=c((-20:0)*0.0,c)
cBPP=c((-20:0)*0.0,cBPP)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Responses, f(t) and g(t)")
lines(x,c, xlim= c(0,5),ylim=c(0,1.2),col="black",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Response, f(t)")
lines(x,cBPP, xlim= c(0,5),ylim=c(0,1.2),col="green",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Response, f(t)")
x = (0:1000)/1000*5
y = (pmin(x-1,0))^2
c = 0.5*0.25*(pmin(x-2,0))^2
cBPP = c*0.0 + 0.2
x=c((-20:0)/(20.0*5),x)
y=c((-20:0)*0.0,y)
c=c((-20:0)*0.0,c)
cBPP=c((-20:0)*0.0,cBPP)
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Responses, f(t) and g(t)")
lines(x,c, xlim= c(0,5),ylim=c(0,1.2),col="black",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Response, f(t)")
lines(x,cBPP, xlim= c(0,5),ylim=c(0,1.2),col="green",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Response, f(t)")
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income",main="Generic Transitory Impulse Response, f(t)")
dev.print(pdf, 'C:/Users/edmun/OneDrive/Documents/Research/Denmark/BPP/PresentationFeb27/GenericTransitory.png')
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Responses, f(t) and g(t)")
lines(x,c, xlim= c(0,5),ylim=c(0,1.2),col="black",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Response, f(t)")
dev.print(pdf, 'C:/Users/edmun/OneDrive/Documents/Research/Denmark/BPP/PresentationFeb27/GenericTransitoryConsumption.png')
plot(x,y, xlim= c(0,5),ylim=c(0,1.2),col="red",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Responses, f(t) and g(t)")
lines(x,c, xlim= c(0,5),ylim=c(0,1.2),col="black",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Response, f(t)")
lines(x,cBPP, xlim= c(0,5),ylim=c(0,1.2),col="green",type="l",lwd=4,xlab="Time",ylab="Income/Consumption",main="Generic Transitory Impulse Response, f(t)")
dev.print(pdf, 'C:/Users/edmun/OneDrive/Documents/Research/Denmark/BPP/PresentationFeb27/GenericTransitoryConsumptionWithBPP.png')
#Next replicate BPP
BPP_output = BPP_parameter_estimation(c_vector, omega, T, ma=1, taste=1, varying_ins=0)
require(numDeriv)
BPP_output
setwd("C:/Users/edmun/OneDrive/Documents/Research/BPP_PSID_TimeAgg/Code/Rcode")
source("./create_moments.r")
source("./min_distance_replication.r")
###############################################################################
#First create the empirical moments for whole sample
moments <- create_moments("../InputFiles/CohA.csv")
c_vector <- moments[["c_vector"]]
omega <- moments[["omega"]]
T <- moments[["T"]]
#Next replicate BPP
BPP_output = BPP_parameter_estimation(c_vector, omega, T, ma=1, taste=1, varying_ins=0)
BPP_output
empirical_input_file="../InputFiles/CohA.csv"
all_data = read.csv(empirical_input_file, sep=",")
all_data1<- as.matrix(all_data )
first_diff<- 1				#Tells whether moments are in levels (0) or FD (1)
T1<- 0
col_id     <- 1                      #/*colum where id is */
col_year   <- 2                      #/*column where year is*/
col_coh    <- 3                      #/*columns where dummies for cohorts are*/
col_deld   <- 4                      #/*columns where dummies for the missing years in FD consumption*/
coly_dif   <- 5                      #/*column where residuals in FD of income are*/
coldy_dif  <- 6                      #/*column where dummies for no-missing residuals in FD are*/
colc_dif   <- 7                      #/*column where residuals in FD of consumption are*/
coldc_dif  <- 8                      #/*column where dummies for no-missing residuals in FD are*/
col_missd  <- 9                      #/*number of missing consumption years in FD*/
#**********First create moments just based on income
# length of panel. Assumes all individuals appear in all years
T  <- max(all_data[,col_year])-min(all_data[,col_year])+1
dif    <- array(1:T^2, dim=c(T,T))*0.0
d_dif  <- array(1:T^2, dim=c(T,T))*0.0
y      <-nrow(all_data)
for (k in 0:((y/T)-1)){
i<- k*T+1
dif_j <-  all_data[i:(i+T-1),coly_dif] %o% all_data[i:(i+T-1),coly_dif]
d_dif_j<- all_data[i:(i+T-1),coldy_dif] %o% all_data[i:(i+T-1),coldy_dif]
dif <-  dif+dif_j
d_dif <-  d_dif+d_dif_j
}
dif <-  dif/d_dif
income_cov <-  dif
income_var <-  diag(dif)
# create vector from the lower triangular elements of the covariance matrix (it is a symetric matrix)
c_matrix <- dif
c_vector <- vech(c_matrix)
dim <- nrow(c_matrix)*(nrow(c_matrix)+1)/2
# create variance matrix for all these moments
omega  <- array(1:dim^2, dim=c(dim,dim))*0.0
d_matrix=d_dif
d_vector=vech(d_matrix)
for (k in 0:((y/T)-1)){
i=k*T+1
dif_j  <- all_data[i:(i+T-1),coly_dif] %o% all_data[i:(i+T-1),coly_dif]
d_dif_j <- all_data[i:(i+T-1),coldy_dif] %o% all_data[i:(i+T-1),coldy_dif]
c_matrix_j <-dif_j
d_matrix_j <- d_dif_j
c_vector_j <- vech(c_matrix_j)
d_vector_j <- vech(d_matrix_j)
omega <- omega+((c_vector_j-c_vector) %o% (c_vector_j-c_vector))*((d_vector_j %o% d_vector_j))
}
c_vector_income_only = c_vector
omega_income_only=omega/(d_vector %o% d_vector)
#**********Now create both income and consumption moments
# stack consumption and income
consumption_rows <- cbind(all_data[,c(colc_dif,coldc_dif,col_deld,col_id,col_year)], all_data[,1]*0+1)
income_rows = cbind(cbind(cbind(all_data[,c(coly_dif,coldy_dif)],all_data[,1]*0) ,all_data[,c(col_id,col_year)]) ,2*(all_data[,1]*0+1))
colnames(income_rows) <- colnames(consumption_rows)
c_y_rows = rbind(consumption_rows,income_rows)
#remove rows for which consumption is missing for everyone
c_y_rows = c_y_rows[c_y_rows[,3]<0.5,]
# sort by id, cons/income, year (do backwards and make sure sorts are stable)
c_y_rows <- c_y_rows[order(c_y_rows[,4],c_y_rows[,6],c_y_rows[,5]),]
initial_year = min(all_data[,col_year])
final_year = max(all_data[,col_year])
T = final_year-initial_year+1
T1= T+T-all_data[1,col_missd]
dif    <- array(1:T1^2, dim=c(T1,T1))*0.0
d_dif  <- array(1:T1^2, dim=c(T1,T1))*0.0
y      <- nrow(c_y_rows)
for (k in 0:((y/T1)-1) ){
i=k*T1+1
dif_j = c_y_rows[i:(i+T1-1),1] %o% c_y_rows[i:(i+T1-1),1]
d_dif_j = c_y_rows[i:(i+T1-1),2] %o% c_y_rows[i:(i+T1-1),2]
dif = dif+dif_j
d_dif = d_dif+d_dif_j
}
dif = dif/d_dif
# create vector from the lower triangular elements of the covariance matrix (it is a symetric matrix)
c_matrix=dif
c_vector= vech(c_matrix)
dim = (nrow(c_matrix)*(nrow(c_matrix)+1))/2
# create variance matrix for all these moments
omega  = array(1:dim^2, dim=c(dim,dim))*0.0
d_matrix=d_dif
d_vector=vech(d_matrix)
for (k in 0:((y/T1)-1) ){
i=k*T1+1
dif_j  =c_y_rows[i:(i+T1-1),1] %o% c_y_rows[i:(i+T1-1),1]
d_dif_j=c_y_rows[i:(i+T1-1),2] %o% c_y_rows[i:(i+T1-1),2]
c_matrix_j=dif_j
d_matrix_j=d_dif_j
c_vector_j= vech(c_matrix_j)
d_vector_j=vech(d_matrix_j)
omega=omega+(((c_vector_j-c_vector) %o% (c_vector_j-c_vector))*((d_vector_j %o% d_vector_j)))
}
c_vector_both = c_vector
omega_both=omega/(d_vector %o% d_vector)
c_vector_both
